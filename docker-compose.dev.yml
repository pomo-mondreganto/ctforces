version: "2.4"

services:
  django:
    build:
      context: .
      dockerfile: ./configs/django/Dockerfile
    volumes:
      - static:/static
      - ./backend:/app
    restart: on-failure
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env

  celery:
    build:
      context: .
      dockerfile: ./configs/celery/Dockerfile
    volumes:
      - ./backend:/app
    restart: on-failure
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env
    environment:
      - CELERY_CONTAINER_TYPE=worker

  flower:
    build:
      context: .
      dockerfile: configs/celery/Dockerfile
    restart: on-failure
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env
      - ./configs/admin.env
    environment:
      - CELERY_CONTAINER_TYPE=flower

  nginx:
    image: nginx:1.15.9-alpine
    volumes:
      - ./configs/nginx/app.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./configs/nginx/proxy_params:/etc/nginx/proxy_params:ro
      - ./configs/nginx/robots.txt:/var/www/ctforces/robots.txt:ro
      - static:/static:ro
    ports:
      - "8000:80"
    restart: on-failure

  postgres:
    image: postgres:12.1
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure
    env_file:
      - ./configs/postgres.env

  redis:
    image: redis:5.0.9-alpine
    restart: on-failure
    sysctls:
      net.core.somaxconn: 1024

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.3-management-alpine
    restart: on-failure
    ports:
      - "15672:15672"
    env_file:
      - configs/rabbitmq.env

  front:
    build:
      context: .
      dockerfile: ./configs/front/Dockerfile
    restart: on-failure
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  static:
