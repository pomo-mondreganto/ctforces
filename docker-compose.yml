version: "2.4"

services:
  django:
    build:
      context: .
      dockerfile: ./configs/django/Dockerfile
    volumes:
      - static:/static
    restart: unless-stopped
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env
      - ./configs/s3.env

  celery:
    build:
      context: .
      dockerfile: ./configs/celery/Dockerfile
    restart: unless-stopped
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env
      - ./configs/s3.env
    environment:
      - CELERY_CONTAINER_TYPE=worker

  flower:
    build:
      context: .
      dockerfile: configs/celery/Dockerfile
    restart: unless-stopped
    env_file:
      - ./configs/django/environment.env
      - ./configs/postgres.env
      - ./configs/rabbitmq.env
      - ./configs/admin.env
      - ./configs/s3.env
    environment:
      - CELERY_CONTAINER_TYPE=flower

  nginx:
    build:
      context: .
      dockerfile: ./configs/nginx/Dockerfile
    volumes:
      - static:/static:ro
    ports:
      - "80:80"
    restart: unless-stopped

  postgres:
    image: postgres:13.4-alpine
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    env_file:
      - ./configs/postgres.env

  redis:
    image: redis:6.2.5-alpine
    restart: unless-stopped
    sysctls:
      net.core.somaxconn: 1024

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.9.5-management-alpine
    restart: on-failure
    ports:
      - "127.0.0.1:15672:15672"
    env_file:
      - configs/rabbitmq.env

volumes:
  static:
